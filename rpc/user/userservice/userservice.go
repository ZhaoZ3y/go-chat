// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: user.proto

package userservice

import (
	"context"

	"IM/rpc/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChangePasswordRequest  = user.ChangePasswordRequest
	ChangePasswordResponse = user.ChangePasswordResponse
	GetUserInfoRequest     = user.GetUserInfoRequest
	GetUserInfoResponse    = user.GetUserInfoResponse
	LoginRequest           = user.LoginRequest
	LoginResponse          = user.LoginResponse
	RefreshTokenRequest    = user.RefreshTokenRequest
	RefreshTokenResponse   = user.RefreshTokenResponse
	RegisterRequest        = user.RegisterRequest
	RegisterResponse       = user.RegisterResponse
	SearchUserRequest      = user.SearchUserRequest
	SearchUserResponse     = user.SearchUserResponse
	UpdateUserInfoRequest  = user.UpdateUserInfoRequest
	UpdateUserInfoResponse = user.UpdateUserInfoResponse
	User                   = user.User

	UserService interface {
		// 用户注册
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		// 用户登录
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		// 获取用户信息
		GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
		// 更新用户信息
		UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error)
		// 搜索用户
		SearchUser(ctx context.Context, in *SearchUserRequest, opts ...grpc.CallOption) (*SearchUserResponse, error)
		// 刷新Token
		RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error)
		// 修改密码
		ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

// 用户注册
func (m *defaultUserService) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

// 用户登录
func (m *defaultUserService) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

// 获取用户信息
func (m *defaultUserService) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

// 更新用户信息
func (m *defaultUserService) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.UpdateUserInfo(ctx, in, opts...)
}

// 搜索用户
func (m *defaultUserService) SearchUser(ctx context.Context, in *SearchUserRequest, opts ...grpc.CallOption) (*SearchUserResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.SearchUser(ctx, in, opts...)
}

// 刷新Token
func (m *defaultUserService) RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.RefreshToken(ctx, in, opts...)
}

// 修改密码
func (m *defaultUserService) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.ChangePassword(ctx, in, opts...)
}
