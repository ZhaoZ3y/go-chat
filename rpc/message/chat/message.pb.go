// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: message.proto

package chat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息类型
type MessageType int32

const (
	MessageType_TEXT   MessageType = 0
	MessageType_IMAGE  MessageType = 1
	MessageType_FILE   MessageType = 2
	MessageType_AUDIO  MessageType = 3
	MessageType_VIDEO  MessageType = 4
	MessageType_SYSTEM MessageType = 5
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "FILE",
		3: "AUDIO",
		4: "VIDEO",
		5: "SYSTEM",
	}
	MessageType_value = map[string]int32{
		"TEXT":   0,
		"IMAGE":  1,
		"FILE":   2,
		"AUDIO":  3,
		"VIDEO":  4,
		"SYSTEM": 5,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

// 聊天类型
type ChatType int32

const (
	ChatType_PRIVATE ChatType = 0 // 私聊
	ChatType_GROUP   ChatType = 1 // 群聊
)

// Enum value maps for ChatType.
var (
	ChatType_name = map[int32]string{
		0: "PRIVATE",
		1: "GROUP",
	}
	ChatType_value = map[string]int32{
		"PRIVATE": 0,
		"GROUP":   1,
	}
)

func (x ChatType) Enum() *ChatType {
	p := new(ChatType)
	*p = x
	return p
}

func (x ChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (ChatType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x ChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatType.Descriptor instead.
func (ChatType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

// 消息
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FromUserId    int64                  `protobuf:"varint,2,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId      int64                  `protobuf:"varint,3,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"` // 私聊时使用
	GroupId       int64                  `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`      // 群聊时使用
	Type          MessageType            `protobuf:"varint,5,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Extra         string                 `protobuf:"bytes,7,opt,name=extra,proto3" json:"extra,omitempty"` // 额外信息，JSON格式
	CreateTime    int64                  `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ChatType      ChatType               `protobuf:"varint,9,opt,name=chat_type,json=chatType,proto3,enum=chat.ChatType" json:"chat_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetFromUserId() int64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *Message) GetToUserId() int64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

func (x *Message) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TEXT
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *Message) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Message) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_PRIVATE
}

// 会话
type Conversation struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId        int64                  `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // 对方用户ID或群组ID
	Type            ChatType               `protobuf:"varint,4,opt,name=type,proto3,enum=chat.ChatType" json:"type,omitempty"`
	LastMessage     string                 `protobuf:"bytes,5,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	LastMessageTime int64                  `protobuf:"varint,6,opt,name=last_message_time,json=lastMessageTime,proto3" json:"last_message_time,omitempty"`
	UnreadCount     int32                  `protobuf:"varint,7,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	CreateTime      int64                  `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      int64                  `protobuf:"varint,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *Conversation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Conversation) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Conversation) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Conversation) GetType() ChatType {
	if x != nil {
		return x.Type
	}
	return ChatType_PRIVATE
}

func (x *Conversation) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *Conversation) GetLastMessageTime() int64 {
	if x != nil {
		return x.LastMessageTime
	}
	return 0
}

func (x *Conversation) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Conversation) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Conversation) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 发送消息请求
type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserId    int64                  `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId      int64                  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"` // 私聊时使用
	GroupId       int64                  `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`      // 群聊时使用
	Type          MessageType            `protobuf:"varint,4,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Extra         string                 `protobuf:"bytes,6,opt,name=extra,proto3" json:"extra,omitempty"`
	ChatType      ChatType               `protobuf:"varint,7,opt,name=chat_type,json=chatType,proto3,enum=chat.ChatType" json:"chat_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageRequest) GetFromUserId() int64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *SendMessageRequest) GetToUserId() int64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

func (x *SendMessageRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SendMessageRequest) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TEXT
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMessageRequest) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *SendMessageRequest) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_PRIVATE
}

// 发送消息响应
type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     int64                  `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageResponse) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SendMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取消息历史请求
type GetMessageHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId      int64                  `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // 对方用户ID或群组ID
	ChatType      ChatType               `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=chat.ChatType" json:"chat_type,omitempty"`
	LastMessageId int64                  `protobuf:"varint,4,opt,name=last_message_id,json=lastMessageId,proto3" json:"last_message_id,omitempty"` // 用于分页，获取此消息之前的消息
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageHistoryRequest) Reset() {
	*x = GetMessageHistoryRequest{}
	mi := &file_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageHistoryRequest) ProtoMessage() {}

func (x *GetMessageHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetMessageHistoryRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *GetMessageHistoryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetMessageHistoryRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GetMessageHistoryRequest) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_PRIVATE
}

func (x *GetMessageHistoryRequest) GetLastMessageId() int64 {
	if x != nil {
		return x.LastMessageId
	}
	return 0
}

func (x *GetMessageHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 获取消息历史响应
type GetMessageHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	HasMore       bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageHistoryResponse) Reset() {
	*x = GetMessageHistoryResponse{}
	mi := &file_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageHistoryResponse) ProtoMessage() {}

func (x *GetMessageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetMessageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *GetMessageHistoryResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetMessageHistoryResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// 获取会话列表请求
type GetConversationListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationListRequest) Reset() {
	*x = GetConversationListRequest{}
	mi := &file_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationListRequest) ProtoMessage() {}

func (x *GetConversationListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationListRequest.ProtoReflect.Descriptor instead.
func (*GetConversationListRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *GetConversationListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetConversationListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetConversationListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取会话列表响应
type GetConversationListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationListResponse) Reset() {
	*x = GetConversationListResponse{}
	mi := &file_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationListResponse) ProtoMessage() {}

func (x *GetConversationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationListResponse.ProtoReflect.Descriptor instead.
func (*GetConversationListResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *GetConversationListResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *GetConversationListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 标记消息已读请求
type MarkMessageReadRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId          int64                  `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // 对方用户ID或群组ID
	ChatType          ChatType               `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=chat.ChatType" json:"chat_type,omitempty"`
	LastReadMessageId int64                  `protobuf:"varint,4,opt,name=last_read_message_id,json=lastReadMessageId,proto3" json:"last_read_message_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MarkMessageReadRequest) Reset() {
	*x = MarkMessageReadRequest{}
	mi := &file_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMessageReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMessageReadRequest) ProtoMessage() {}

func (x *MarkMessageReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMessageReadRequest.ProtoReflect.Descriptor instead.
func (*MarkMessageReadRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *MarkMessageReadRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MarkMessageReadRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *MarkMessageReadRequest) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_PRIVATE
}

func (x *MarkMessageReadRequest) GetLastReadMessageId() int64 {
	if x != nil {
		return x.LastReadMessageId
	}
	return 0
}

// 标记消息已读响应
type MarkMessageReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkMessageReadResponse) Reset() {
	*x = MarkMessageReadResponse{}
	mi := &file_message_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMessageReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMessageReadResponse) ProtoMessage() {}

func (x *MarkMessageReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMessageReadResponse.ProtoReflect.Descriptor instead.
func (*MarkMessageReadResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *MarkMessageReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarkMessageReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除消息请求
type DeleteMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     int64                  `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	mi := &file_message_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteMessageRequest) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *DeleteMessageRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 删除消息响应
type DeleteMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageResponse) Reset() {
	*x = DeleteMessageResponse{}
	mi := &file_message_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResponse) ProtoMessage() {}

func (x *DeleteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResponse.ProtoReflect.Descriptor instead.
func (*DeleteMessageResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 撤回消息请求
type RecallMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     int64                  `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecallMessageRequest) Reset() {
	*x = RecallMessageRequest{}
	mi := &file_message_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecallMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecallMessageRequest) ProtoMessage() {}

func (x *RecallMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecallMessageRequest.ProtoReflect.Descriptor instead.
func (*RecallMessageRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{12}
}

func (x *RecallMessageRequest) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *RecallMessageRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 撤回消息响应
type RecallMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecallMessageResponse) Reset() {
	*x = RecallMessageResponse{}
	mi := &file_message_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecallMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecallMessageResponse) ProtoMessage() {}

func (x *RecallMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecallMessageResponse.ProtoReflect.Descriptor instead.
func (*RecallMessageResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{13}
}

func (x *RecallMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RecallMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// WebSocket连接请求
type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_message_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{14}
}

func (x *ConnectRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ConnectRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// WebSocket消息推送
type PushMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // message, notification, etc.
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // JSON格式的数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushMessage) Reset() {
	*x = PushMessage{}
	mi := &file_message_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessage) ProtoMessage() {}

func (x *PushMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessage.ProtoReflect.Descriptor instead.
func (*PushMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{15}
}

func (x *PushMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PushMessage) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_message_proto protoreflect.FileDescriptor

const file_message_proto_rawDesc = "" +
	"\n" +
	"\rmessage.proto\x12\x04chat\"\x99\x02\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12 \n" +
	"\ffrom_user_id\x18\x02 \x01(\x03R\n" +
	"fromUserId\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x03 \x01(\x03R\btoUserId\x12\x19\n" +
	"\bgroup_id\x18\x04 \x01(\x03R\agroupId\x12%\n" +
	"\x04type\x18\x05 \x01(\x0e2\x11.chat.MessageTypeR\x04type\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12\x14\n" +
	"\x05extra\x18\a \x01(\tR\x05extra\x12\x1f\n" +
	"\vcreate_time\x18\b \x01(\x03R\n" +
	"createTime\x12+\n" +
	"\tchat_type\x18\t \x01(\x0e2\x0e.chat.ChatTypeR\bchatType\"\xac\x02\n" +
	"\fConversation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x1b\n" +
	"\ttarget_id\x18\x03 \x01(\x03R\btargetId\x12\"\n" +
	"\x04type\x18\x04 \x01(\x0e2\x0e.chat.ChatTypeR\x04type\x12!\n" +
	"\flast_message\x18\x05 \x01(\tR\vlastMessage\x12*\n" +
	"\x11last_message_time\x18\x06 \x01(\x03R\x0flastMessageTime\x12!\n" +
	"\funread_count\x18\a \x01(\x05R\vunreadCount\x12\x1f\n" +
	"\vcreate_time\x18\b \x01(\x03R\n" +
	"createTime\x12\x1f\n" +
	"\vupdate_time\x18\t \x01(\x03R\n" +
	"updateTime\"\xf3\x01\n" +
	"\x12SendMessageRequest\x12 \n" +
	"\ffrom_user_id\x18\x01 \x01(\x03R\n" +
	"fromUserId\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x02 \x01(\x03R\btoUserId\x12\x19\n" +
	"\bgroup_id\x18\x03 \x01(\x03R\agroupId\x12%\n" +
	"\x04type\x18\x04 \x01(\x0e2\x11.chat.MessageTypeR\x04type\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x14\n" +
	"\x05extra\x18\x06 \x01(\tR\x05extra\x12+\n" +
	"\tchat_type\x18\a \x01(\x0e2\x0e.chat.ChatTypeR\bchatType\"h\n" +
	"\x13SendMessageResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\x03R\tmessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xbb\x01\n" +
	"\x18GetMessageHistoryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\x03R\btargetId\x12+\n" +
	"\tchat_type\x18\x03 \x01(\x0e2\x0e.chat.ChatTypeR\bchatType\x12&\n" +
	"\x0flast_message_id\x18\x04 \x01(\x03R\rlastMessageId\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\"a\n" +
	"\x19GetMessageHistoryResponse\x12)\n" +
	"\bmessages\x18\x01 \x03(\v2\r.chat.MessageR\bmessages\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore\"f\n" +
	"\x1aGetConversationListRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"m\n" +
	"\x1bGetConversationListResponse\x128\n" +
	"\rconversations\x18\x01 \x03(\v2\x12.chat.ConversationR\rconversations\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"\xac\x01\n" +
	"\x16MarkMessageReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\x03R\btargetId\x12+\n" +
	"\tchat_type\x18\x03 \x01(\x0e2\x0e.chat.ChatTypeR\bchatType\x12/\n" +
	"\x14last_read_message_id\x18\x04 \x01(\x03R\x11lastReadMessageId\"M\n" +
	"\x17MarkMessageReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"N\n" +
	"\x14DeleteMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\x03R\tmessageId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"K\n" +
	"\x15DeleteMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"N\n" +
	"\x14RecallMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\x03R\tmessageId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"K\n" +
	"\x15RecallMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"?\n" +
	"\x0eConnectRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"5\n" +
	"\vPushMessage\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data*N\n" +
	"\vMessageType\x12\b\n" +
	"\x04TEXT\x10\x00\x12\t\n" +
	"\x05IMAGE\x10\x01\x12\b\n" +
	"\x04FILE\x10\x02\x12\t\n" +
	"\x05AUDIO\x10\x03\x12\t\n" +
	"\x05VIDEO\x10\x04\x12\n" +
	"\n" +
	"\x06SYSTEM\x10\x05*\"\n" +
	"\bChatType\x12\v\n" +
	"\aPRIVATE\x10\x00\x12\t\n" +
	"\x05GROUP\x10\x012\xe7\x03\n" +
	"\vChatService\x12B\n" +
	"\vSendMessage\x12\x18.chat.SendMessageRequest\x1a\x19.chat.SendMessageResponse\x12T\n" +
	"\x11GetMessageHistory\x12\x1e.chat.GetMessageHistoryRequest\x1a\x1f.chat.GetMessageHistoryResponse\x12Z\n" +
	"\x13GetConversationList\x12 .chat.GetConversationListRequest\x1a!.chat.GetConversationListResponse\x12N\n" +
	"\x0fMarkMessageRead\x12\x1c.chat.MarkMessageReadRequest\x1a\x1d.chat.MarkMessageReadResponse\x12H\n" +
	"\rDeleteMessage\x12\x1a.chat.DeleteMessageRequest\x1a\x1b.chat.DeleteMessageResponse\x12H\n" +
	"\rRecallMessage\x12\x1a.chat.RecallMessageRequest\x1a\x1b.chat.RecallMessageResponseB\bZ\x06./chatb\x06proto3"

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData []byte
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_proto_rawDesc), len(file_message_proto_rawDesc)))
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_message_proto_goTypes = []any{
	(MessageType)(0),                    // 0: chat.MessageType
	(ChatType)(0),                       // 1: chat.ChatType
	(*Message)(nil),                     // 2: chat.Message
	(*Conversation)(nil),                // 3: chat.Conversation
	(*SendMessageRequest)(nil),          // 4: chat.SendMessageRequest
	(*SendMessageResponse)(nil),         // 5: chat.SendMessageResponse
	(*GetMessageHistoryRequest)(nil),    // 6: chat.GetMessageHistoryRequest
	(*GetMessageHistoryResponse)(nil),   // 7: chat.GetMessageHistoryResponse
	(*GetConversationListRequest)(nil),  // 8: chat.GetConversationListRequest
	(*GetConversationListResponse)(nil), // 9: chat.GetConversationListResponse
	(*MarkMessageReadRequest)(nil),      // 10: chat.MarkMessageReadRequest
	(*MarkMessageReadResponse)(nil),     // 11: chat.MarkMessageReadResponse
	(*DeleteMessageRequest)(nil),        // 12: chat.DeleteMessageRequest
	(*DeleteMessageResponse)(nil),       // 13: chat.DeleteMessageResponse
	(*RecallMessageRequest)(nil),        // 14: chat.RecallMessageRequest
	(*RecallMessageResponse)(nil),       // 15: chat.RecallMessageResponse
	(*ConnectRequest)(nil),              // 16: chat.ConnectRequest
	(*PushMessage)(nil),                 // 17: chat.PushMessage
}
var file_message_proto_depIdxs = []int32{
	0,  // 0: chat.Message.type:type_name -> chat.MessageType
	1,  // 1: chat.Message.chat_type:type_name -> chat.ChatType
	1,  // 2: chat.Conversation.type:type_name -> chat.ChatType
	0,  // 3: chat.SendMessageRequest.type:type_name -> chat.MessageType
	1,  // 4: chat.SendMessageRequest.chat_type:type_name -> chat.ChatType
	1,  // 5: chat.GetMessageHistoryRequest.chat_type:type_name -> chat.ChatType
	2,  // 6: chat.GetMessageHistoryResponse.messages:type_name -> chat.Message
	3,  // 7: chat.GetConversationListResponse.conversations:type_name -> chat.Conversation
	1,  // 8: chat.MarkMessageReadRequest.chat_type:type_name -> chat.ChatType
	4,  // 9: chat.ChatService.SendMessage:input_type -> chat.SendMessageRequest
	6,  // 10: chat.ChatService.GetMessageHistory:input_type -> chat.GetMessageHistoryRequest
	8,  // 11: chat.ChatService.GetConversationList:input_type -> chat.GetConversationListRequest
	10, // 12: chat.ChatService.MarkMessageRead:input_type -> chat.MarkMessageReadRequest
	12, // 13: chat.ChatService.DeleteMessage:input_type -> chat.DeleteMessageRequest
	14, // 14: chat.ChatService.RecallMessage:input_type -> chat.RecallMessageRequest
	5,  // 15: chat.ChatService.SendMessage:output_type -> chat.SendMessageResponse
	7,  // 16: chat.ChatService.GetMessageHistory:output_type -> chat.GetMessageHistoryResponse
	9,  // 17: chat.ChatService.GetConversationList:output_type -> chat.GetConversationListResponse
	11, // 18: chat.ChatService.MarkMessageRead:output_type -> chat.MarkMessageReadResponse
	13, // 19: chat.ChatService.DeleteMessage:output_type -> chat.DeleteMessageResponse
	15, // 20: chat.ChatService.RecallMessage:output_type -> chat.RecallMessageResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_proto_rawDesc), len(file_message_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
