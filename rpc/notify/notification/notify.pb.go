// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: notify.proto

package notification

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通知类型，涵盖好友申请和多种群聊相关通知
type NotificationType int32

const (
	NotificationType_UNKNOWN                        NotificationType = 0  // 未知类型，默认值
	NotificationType_FRIEND_REQUEST                 NotificationType = 1  // 好友申请通知
	NotificationType_GROUP_JOIN_REQUEST             NotificationType = 2  // 用户申请加入群聊
	NotificationType_GROUP_JOINED_BROADCAST         NotificationType = 3  // 群内广播某用户加入群聊
	NotificationType_GROUP_INVITE_JOIN_REQUEST      NotificationType = 4  // 群聊邀请入群申请
	NotificationType_GROUP_HANDLE_JOIN_REQUEST      NotificationType = 5  // 群聊处理入群申请结果
	NotificationType_GROUP_BEINVITED_JOINED_REQUEST NotificationType = 6  // 被邀请加入群聊通知
	NotificationType_GROUP_MEMBER_KICKED            NotificationType = 7  // 群成员被踢出通知
	NotificationType_GROUP_MEMBER_QUIT              NotificationType = 8  // 群成员主动退出通知
	NotificationType_GROUP_TRANSFERRED              NotificationType = 9  // 群聊转让通知
	NotificationType_GROUP_ADMIN_HANDLE             NotificationType = 10 // 群管理员处理通知
	NotificationType_GROUP_DISMISSED                NotificationType = 11 // 群聊被解散通知
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "FRIEND_REQUEST",
		2:  "GROUP_JOIN_REQUEST",
		3:  "GROUP_JOINED_BROADCAST",
		4:  "GROUP_INVITE_JOIN_REQUEST",
		5:  "GROUP_HANDLE_JOIN_REQUEST",
		6:  "GROUP_BEINVITED_JOINED_REQUEST",
		7:  "GROUP_MEMBER_KICKED",
		8:  "GROUP_MEMBER_QUIT",
		9:  "GROUP_TRANSFERRED",
		10: "GROUP_ADMIN_HANDLE",
		11: "GROUP_DISMISSED",
	}
	NotificationType_value = map[string]int32{
		"UNKNOWN":                        0,
		"FRIEND_REQUEST":                 1,
		"GROUP_JOIN_REQUEST":             2,
		"GROUP_JOINED_BROADCAST":         3,
		"GROUP_INVITE_JOIN_REQUEST":      4,
		"GROUP_HANDLE_JOIN_REQUEST":      5,
		"GROUP_BEINVITED_JOINED_REQUEST": 6,
		"GROUP_MEMBER_KICKED":            7,
		"GROUP_MEMBER_QUIT":              8,
		"GROUP_TRANSFERRED":              9,
		"GROUP_ADMIN_HANDLE":             10,
		"GROUP_DISMISSED":                11,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_notify_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_notify_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{0}
}

// 通知消息结构体
type NotificationMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	UserId    int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 接收通知的用户ID，单点接收
	Topic     string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`                                   // Kafka主题名称，建议固定业务枚举映射
	Content   string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                               // 通知内容，简短描述信息
	Timestamp int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                          // 事件时间点，标准时间类型
	Type      NotificationType       `protobuf:"varint,5,opt,name=type,proto3,enum=notification.NotificationType" json:"type,omitempty"` // 通知类型，区分业务含义
	// 群聊相关字段，仅针对群聊通知有效
	GroupId        int64  `protobuf:"varint,6,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                        // 群聊ID
	OperatorUserId int64  `protobuf:"varint,7,opt,name=operator_user_id,json=operatorUserId,proto3" json:"operator_user_id,omitempty"` // 操作者ID，如发起申请、审核者等
	Extra          string `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`                                            // 扩展字段，JSON格式字符串，便于灵活传输复杂信息
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NotificationMessage) Reset() {
	*x = NotificationMessage{}
	mi := &file_notify_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationMessage) ProtoMessage() {}

func (x *NotificationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationMessage.ProtoReflect.Descriptor instead.
func (*NotificationMessage) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationMessage) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NotificationMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *NotificationMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NotificationMessage) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_UNKNOWN
}

func (x *NotificationMessage) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *NotificationMessage) GetOperatorUserId() int64 {
	if x != nil {
		return x.OperatorUserId
	}
	return 0
}

func (x *NotificationMessage) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

// 发送通知请求
type SendNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *NotificationMessage   `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_notify_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{1}
}

func (x *SendNotificationRequest) GetNotification() *NotificationMessage {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 发送通知响应
type SendNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMsg      string                 `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_notify_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{2}
}

func (x *SendNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendNotificationResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// 消费通知请求（示范用，一般由消费端实现处理）
type ConsumeNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *NotificationMessage   `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumeNotificationRequest) Reset() {
	*x = ConsumeNotificationRequest{}
	mi := &file_notify_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumeNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeNotificationRequest) ProtoMessage() {}

func (x *ConsumeNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeNotificationRequest.ProtoReflect.Descriptor instead.
func (*ConsumeNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{3}
}

func (x *ConsumeNotificationRequest) GetNotification() *NotificationMessage {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 消费通知响应
type ConsumeNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMsg      string                 `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumeNotificationResponse) Reset() {
	*x = ConsumeNotificationResponse{}
	mi := &file_notify_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumeNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeNotificationResponse) ProtoMessage() {}

func (x *ConsumeNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeNotificationResponse.ProtoReflect.Descriptor instead.
func (*ConsumeNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{4}
}

func (x *ConsumeNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConsumeNotificationResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

var File_notify_proto protoreflect.FileDescriptor

const file_notify_proto_rawDesc = "" +
	"\n" +
	"\fnotify.proto\x12\fnotification\"\x8b\x02\n" +
	"\x13NotificationMessage\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x122\n" +
	"\x04type\x18\x05 \x01(\x0e2\x1e.notification.NotificationTypeR\x04type\x12\x19\n" +
	"\bgroup_id\x18\x06 \x01(\x03R\agroupId\x12(\n" +
	"\x10operator_user_id\x18\a \x01(\x03R\x0eoperatorUserId\x12\x14\n" +
	"\x05extra\x18\b \x01(\tR\x05extra\"`\n" +
	"\x17SendNotificationRequest\x12E\n" +
	"\fnotification\x18\x01 \x01(\v2!.notification.NotificationMessageR\fnotification\"Q\n" +
	"\x18SendNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\terror_msg\x18\x02 \x01(\tR\berrorMsg\"c\n" +
	"\x1aConsumeNotificationRequest\x12E\n" +
	"\fnotification\x18\x01 \x01(\v2!.notification.NotificationMessageR\fnotification\"T\n" +
	"\x1bConsumeNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\terror_msg\x18\x02 \x01(\tR\berrorMsg*\xbd\x02\n" +
	"\x10NotificationType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x12\n" +
	"\x0eFRIEND_REQUEST\x10\x01\x12\x16\n" +
	"\x12GROUP_JOIN_REQUEST\x10\x02\x12\x1a\n" +
	"\x16GROUP_JOINED_BROADCAST\x10\x03\x12\x1d\n" +
	"\x19GROUP_INVITE_JOIN_REQUEST\x10\x04\x12\x1d\n" +
	"\x19GROUP_HANDLE_JOIN_REQUEST\x10\x05\x12\"\n" +
	"\x1eGROUP_BEINVITED_JOINED_REQUEST\x10\x06\x12\x17\n" +
	"\x13GROUP_MEMBER_KICKED\x10\a\x12\x15\n" +
	"\x11GROUP_MEMBER_QUIT\x10\b\x12\x15\n" +
	"\x11GROUP_TRANSFERRED\x10\t\x12\x16\n" +
	"\x12GROUP_ADMIN_HANDLE\x10\n" +
	"\x12\x13\n" +
	"\x0fGROUP_DISMISSED\x10\v2\xe4\x01\n" +
	"\x13NotificationService\x12a\n" +
	"\x10SendNotification\x12%.notification.SendNotificationRequest\x1a&.notification.SendNotificationResponse\x12j\n" +
	"\x13ConsumeNotification\x12(.notification.ConsumeNotificationRequest\x1a).notification.ConsumeNotificationResponseB\x10Z\x0e./notificationb\x06proto3"

var (
	file_notify_proto_rawDescOnce sync.Once
	file_notify_proto_rawDescData []byte
)

func file_notify_proto_rawDescGZIP() []byte {
	file_notify_proto_rawDescOnce.Do(func() {
		file_notify_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notify_proto_rawDesc), len(file_notify_proto_rawDesc)))
	})
	return file_notify_proto_rawDescData
}

var file_notify_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_notify_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_notify_proto_goTypes = []any{
	(NotificationType)(0),               // 0: notification.NotificationType
	(*NotificationMessage)(nil),         // 1: notification.NotificationMessage
	(*SendNotificationRequest)(nil),     // 2: notification.SendNotificationRequest
	(*SendNotificationResponse)(nil),    // 3: notification.SendNotificationResponse
	(*ConsumeNotificationRequest)(nil),  // 4: notification.ConsumeNotificationRequest
	(*ConsumeNotificationResponse)(nil), // 5: notification.ConsumeNotificationResponse
}
var file_notify_proto_depIdxs = []int32{
	0, // 0: notification.NotificationMessage.type:type_name -> notification.NotificationType
	1, // 1: notification.SendNotificationRequest.notification:type_name -> notification.NotificationMessage
	1, // 2: notification.ConsumeNotificationRequest.notification:type_name -> notification.NotificationMessage
	2, // 3: notification.NotificationService.SendNotification:input_type -> notification.SendNotificationRequest
	4, // 4: notification.NotificationService.ConsumeNotification:input_type -> notification.ConsumeNotificationRequest
	3, // 5: notification.NotificationService.SendNotification:output_type -> notification.SendNotificationResponse
	5, // 6: notification.NotificationService.ConsumeNotification:output_type -> notification.ConsumeNotificationResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_notify_proto_init() }
func file_notify_proto_init() {
	if File_notify_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notify_proto_rawDesc), len(file_notify_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notify_proto_goTypes,
		DependencyIndexes: file_notify_proto_depIdxs,
		EnumInfos:         file_notify_proto_enumTypes,
		MessageInfos:      file_notify_proto_msgTypes,
	}.Build()
	File_notify_proto = out.File
	file_notify_proto_goTypes = nil
	file_notify_proto_depIdxs = nil
}
