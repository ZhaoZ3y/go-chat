syntax = "proto3";

package file;

option go_package = "./file";

// 文件信息
message FileInfo {
  int64 id = 1;
  string filename = 2;
  string original_name = 3;
  string file_path = 4;
  string file_url = 5;
  string file_type = 6; // image, video, audio, document, etc.
  int64 file_size = 7;
  string mime_type = 8;
  string hash = 9; // 文件hash值，用于去重
  int64 user_id = 10;
  int32 status = 11; // 1:正常 2:已删除
  int64 create_time = 12;
  int64 update_time = 13;
}

// 上传文件请求
message UploadFileRequest {
  bytes file_data = 1;
  string filename = 2;
  string mime_type = 3;
  int64 user_id = 4;
  string file_type = 5;
}

// 上传文件响应
message UploadFileResponse {
  int64 file_id = 1;
  string file_url = 2;
  bool success = 3;
  string message = 4;
}

// 分块上传初始化请求
message InitUploadRequest {
  string filename = 2;
  string mime_type = 3;
  int64 file_size = 4;
  int64 user_id = 5;
  string file_type = 6;
  string hash = 7;
}

// 分块上传初始化响应
message InitUploadResponse {
  string upload_id = 1;
  int32 chunk_size = 2;
  int32 total_chunks = 3;
  bool success = 4;
  string message = 5;
}

// 分块上传请求
message UploadChunkRequest {
  string upload_id = 1;
  int32 chunk_index = 2;
  bytes chunk_data = 3;
  string chunk_hash = 4;
}

// 分块上传响应
message UploadChunkResponse {
  bool success = 1;
  string message = 2;
}

// 完成分块上传请求
message CompleteUploadRequest {
  string upload_id = 1;
  int64 user_id = 2;
}

// 完成分块上传响应
message CompleteUploadResponse {
  int64 file_id = 1;
  string file_url = 2;
  bool success = 3;
  string message = 4;
}

// 下载文件请求
message DownloadFileRequest {
  int64 file_id = 1;
  int64 user_id = 2;
}

// 下载文件响应
message DownloadFileResponse {
  bytes file_data = 1;
  string filename = 2;
  string mime_type = 3;
  bool success = 4;
  string message = 5;
}

// 获取文件信息请求
message GetFileInfoRequest {
  int64 file_id = 1;
  int64 user_id = 2;
}

// 获取文件信息响应
message GetFileInfoResponse {
  FileInfo file_info = 1;
  bool success = 2;
  string message = 3;
}

// 获取文件列表请求
message GetFileListRequest {
  int64 user_id = 1;
  string file_type = 2; // 文件类型过滤，空字符串表示所有类型
  int32 page = 3;
  int32 page_size = 4;
}

// 获取文件列表响应
message GetFileListResponse {
  repeated FileInfo files = 1;
  int64 total = 2;
}

// 删除文件请求
message DeleteFileRequest {
  int64 file_id = 1;
  int64 user_id = 2;
}

// 删除文件响应
message DeleteFileResponse {
  bool success = 1;
  string message = 2;
}

// 生成预签名URL请求
message GeneratePresignedUrlRequest {
  string filename = 1;
  string mime_type = 2;
  int64 user_id = 3;
  int64 expire_time = 4; // 过期时间(秒)
}

// 生成预签名URL响应
message GeneratePresignedUrlResponse {
  string upload_url = 1;
  string file_key = 2;
  int64 expire_time = 3;
  bool success = 4;
  string message = 5;
}

// 确认上传请求
message ConfirmUploadRequest {
  string file_key = 1;
  string filename = 2;
  string mime_type = 3;
  int64 file_size = 4;
  int64 user_id = 5;
  string file_type = 6;
}

// 确认上传响应
message ConfirmUploadResponse {
  int64 file_id = 1;
  string file_url = 2;
  bool success = 3;
  string message = 4;
}

// 图片压缩请求
message CompressImageRequest {
  int64 file_id = 1;
  int32 quality = 2; // 压缩质量 1-100
  int32 width = 3;   // 目标宽度，0表示不限制
  int32 height = 4;  // 目标高度，0表示不限制
}

// 图片压缩响应
message CompressImageResponse {
  int64 compressed_file_id = 1;
  string compressed_file_url = 2;
  bool success = 3;
  string message = 4;
}

// 文件服务
service FileService {
  // 上传文件
  rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);
  // 初始化分块上传
  rpc InitUpload(InitUploadRequest) returns (InitUploadResponse);
  // 分块上传
  rpc UploadChunk(UploadChunkRequest) returns (UploadChunkResponse);
  // 完成分块上传
  rpc CompleteUpload(CompleteUploadRequest) returns (CompleteUploadResponse);
  // 下载文件
  rpc DownloadFile(DownloadFileRequest) returns (DownloadFileResponse);
  // 获取文件信息
  rpc GetFileInfo(GetFileInfoRequest) returns (GetFileInfoResponse);
  // 获取文件列表
  rpc GetFileList(GetFileListRequest) returns (GetFileListResponse);
  // 删除文件
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
  // 生成预签名URL
  rpc GeneratePresignedUrl(GeneratePresignedUrlRequest) returns (GeneratePresignedUrlResponse);
  // 确认上传
  rpc ConfirmUpload(ConfirmUploadRequest) returns (ConfirmUploadResponse);
  // 图片压缩
  rpc CompressImage(CompressImageRequest) returns (CompressImageResponse);
}