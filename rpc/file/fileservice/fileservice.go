// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: file.proto

package fileservice

import (
	"context"

	"IM/rpc/file/file"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CompleteUploadRequest        = file.CompleteUploadRequest
	CompleteUploadResponse       = file.CompleteUploadResponse
	CompressImageRequest         = file.CompressImageRequest
	CompressImageResponse        = file.CompressImageResponse
	ConfirmUploadRequest         = file.ConfirmUploadRequest
	ConfirmUploadResponse        = file.ConfirmUploadResponse
	DeleteFileRequest            = file.DeleteFileRequest
	DeleteFileResponse           = file.DeleteFileResponse
	DownloadFileRequest          = file.DownloadFileRequest
	DownloadFileResponse         = file.DownloadFileResponse
	FileInfo                     = file.FileInfo
	GeneratePresignedUrlRequest  = file.GeneratePresignedUrlRequest
	GeneratePresignedUrlResponse = file.GeneratePresignedUrlResponse
	GetFileInfoRequest           = file.GetFileInfoRequest
	GetFileInfoResponse          = file.GetFileInfoResponse
	GetFileListRequest           = file.GetFileListRequest
	GetFileListResponse          = file.GetFileListResponse
	InitUploadRequest            = file.InitUploadRequest
	InitUploadResponse           = file.InitUploadResponse
	UploadChunkRequest           = file.UploadChunkRequest
	UploadChunkResponse          = file.UploadChunkResponse
	UploadFileRequest            = file.UploadFileRequest
	UploadFileResponse           = file.UploadFileResponse

	FileService interface {
		// 上传文件
		UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileResponse, error)
		// 初始化分块上传
		InitUpload(ctx context.Context, in *InitUploadRequest, opts ...grpc.CallOption) (*InitUploadResponse, error)
		// 分块上传
		UploadChunk(ctx context.Context, in *UploadChunkRequest, opts ...grpc.CallOption) (*UploadChunkResponse, error)
		// 完成分块上传
		CompleteUpload(ctx context.Context, in *CompleteUploadRequest, opts ...grpc.CallOption) (*CompleteUploadResponse, error)
		// 下载文件
		DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (*DownloadFileResponse, error)
		// 获取文件信息
		GetFileInfo(ctx context.Context, in *GetFileInfoRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error)
		// 获取文件列表
		GetFileList(ctx context.Context, in *GetFileListRequest, opts ...grpc.CallOption) (*GetFileListResponse, error)
		// 删除文件
		DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*DeleteFileResponse, error)
		// 生成预签名URL
		GeneratePresignedUrl(ctx context.Context, in *GeneratePresignedUrlRequest, opts ...grpc.CallOption) (*GeneratePresignedUrlResponse, error)
		// 确认上传
		ConfirmUpload(ctx context.Context, in *ConfirmUploadRequest, opts ...grpc.CallOption) (*ConfirmUploadResponse, error)
		// 图片压缩
		CompressImage(ctx context.Context, in *CompressImageRequest, opts ...grpc.CallOption) (*CompressImageResponse, error)
	}

	defaultFileService struct {
		cli zrpc.Client
	}
)

func NewFileService(cli zrpc.Client) FileService {
	return &defaultFileService{
		cli: cli,
	}
}

// 上传文件
func (m *defaultFileService) UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.UploadFile(ctx, in, opts...)
}

// 初始化分块上传
func (m *defaultFileService) InitUpload(ctx context.Context, in *InitUploadRequest, opts ...grpc.CallOption) (*InitUploadResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.InitUpload(ctx, in, opts...)
}

// 分块上传
func (m *defaultFileService) UploadChunk(ctx context.Context, in *UploadChunkRequest, opts ...grpc.CallOption) (*UploadChunkResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.UploadChunk(ctx, in, opts...)
}

// 完成分块上传
func (m *defaultFileService) CompleteUpload(ctx context.Context, in *CompleteUploadRequest, opts ...grpc.CallOption) (*CompleteUploadResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.CompleteUpload(ctx, in, opts...)
}

// 下载文件
func (m *defaultFileService) DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (*DownloadFileResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.DownloadFile(ctx, in, opts...)
}

// 获取文件信息
func (m *defaultFileService) GetFileInfo(ctx context.Context, in *GetFileInfoRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.GetFileInfo(ctx, in, opts...)
}

// 获取文件列表
func (m *defaultFileService) GetFileList(ctx context.Context, in *GetFileListRequest, opts ...grpc.CallOption) (*GetFileListResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.GetFileList(ctx, in, opts...)
}

// 删除文件
func (m *defaultFileService) DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*DeleteFileResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.DeleteFile(ctx, in, opts...)
}

// 生成预签名URL
func (m *defaultFileService) GeneratePresignedUrl(ctx context.Context, in *GeneratePresignedUrlRequest, opts ...grpc.CallOption) (*GeneratePresignedUrlResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.GeneratePresignedUrl(ctx, in, opts...)
}

// 确认上传
func (m *defaultFileService) ConfirmUpload(ctx context.Context, in *ConfirmUploadRequest, opts ...grpc.CallOption) (*ConfirmUploadResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.ConfirmUpload(ctx, in, opts...)
}

// 图片压缩
func (m *defaultFileService) CompressImage(ctx context.Context, in *CompressImageRequest, opts ...grpc.CallOption) (*CompressImageResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.CompressImage(ctx, in, opts...)
}
