// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: file.proto

package fileservice

import (
	"context"

	"IM/rpc/file/file"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteFileRequest    = file.DeleteFileRequest
	DeleteFileResponse   = file.DeleteFileResponse
	DownloadFileRequest  = file.DownloadFileRequest
	DownloadFileResponse = file.DownloadFileResponse
	GetFileInfoRequest   = file.GetFileInfoRequest
	GetFileInfoResponse  = file.GetFileInfoResponse
	GetFileRecordReq     = file.GetFileRecordReq
	GetFileRecordResp    = file.GetFileRecordResp
	UploadFileRequest    = file.UploadFileRequest
	UploadFileResponse   = file.UploadFileResponse

	FileService interface {
		// 上传文件
		UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileResponse, error)
		// 下载文件
		DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (*DownloadFileResponse, error)
		// 删除文件
		DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*DeleteFileResponse, error)
		// 获取文件信息
		GetFileInfo(ctx context.Context, in *GetFileInfoRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error)
		// 获取用户文件记录
		GetFileRecord(ctx context.Context, in *GetFileRecordReq, opts ...grpc.CallOption) (*GetFileRecordResp, error)
		// 上传头像
		UploadAvatar(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileResponse, error)
	}

	defaultFileService struct {
		cli zrpc.Client
	}
)

func NewFileService(cli zrpc.Client) FileService {
	return &defaultFileService{
		cli: cli,
	}
}

// 上传文件
func (m *defaultFileService) UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.UploadFile(ctx, in, opts...)
}

// 下载文件
func (m *defaultFileService) DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (*DownloadFileResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.DownloadFile(ctx, in, opts...)
}

// 删除文件
func (m *defaultFileService) DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*DeleteFileResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.DeleteFile(ctx, in, opts...)
}

// 获取文件信息
func (m *defaultFileService) GetFileInfo(ctx context.Context, in *GetFileInfoRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.GetFileInfo(ctx, in, opts...)
}

// 获取用户文件记录
func (m *defaultFileService) GetFileRecord(ctx context.Context, in *GetFileRecordReq, opts ...grpc.CallOption) (*GetFileRecordResp, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.GetFileRecord(ctx, in, opts...)
}

// 上传头像
func (m *defaultFileService) UploadAvatar(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileResponse, error) {
	client := file.NewFileServiceClient(m.cli.Conn())
	return client.UploadAvatar(ctx, in, opts...)
}
