// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: file.proto

package server

import (
	"context"

	"IM/apps/file/internal/logic"
	"IM/apps/file/internal/svc"
	"IM/apps/file/rpc/file"
)

type FileServiceServer struct {
	svcCtx *svc.ServiceContext
	file.UnimplementedFileServiceServer
}

func NewFileServiceServer(svcCtx *svc.ServiceContext) *FileServiceServer {
	return &FileServiceServer{
		svcCtx: svcCtx,
	}
}

// 上传头像
func (s *FileServiceServer) UploadAvatar(ctx context.Context, in *file.UploadAvatarRequest) (*file.UploadAvatarResponse, error) {
	l := logic.NewUploadAvatarLogic(ctx, s.svcCtx)
	return l.UploadAvatar(in)
}

// 上传图片
func (s *FileServiceServer) UploadImage(ctx context.Context, in *file.UploadImageRequest) (*file.UploadImageResponse, error) {
	l := logic.NewUploadImageLogic(ctx, s.svcCtx)
	return l.UploadImage(in)
}

// 上传文件初始化
func (s *FileServiceServer) UploadFileInit(ctx context.Context, in *file.UploadFileInitRequest) (*file.UploadFileInitResponse, error) {
	l := logic.NewUploadFileInitLogic(ctx, s.svcCtx)
	return l.UploadFileInit(in)
}

// 上传文件分片
func (s *FileServiceServer) UploadFileChunk(ctx context.Context, in *file.UploadFileChunkRequest) (*file.UploadFileChunkResponse, error) {
	l := logic.NewUploadFileChunkLogic(ctx, s.svcCtx)
	return l.UploadFileChunk(in)
}
