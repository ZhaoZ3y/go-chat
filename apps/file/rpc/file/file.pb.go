// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: idl/file/file.proto

package file

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 上传头像
type UploadAvatarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAvatarRequest) Reset() {
	*x = UploadAvatarRequest{}
	mi := &file_idl_file_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAvatarRequest) ProtoMessage() {}

func (x *UploadAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_file_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAvatarRequest.ProtoReflect.Descriptor instead.
func (*UploadAvatarRequest) Descriptor() ([]byte, []int) {
	return file_idl_file_file_proto_rawDescGZIP(), []int{0}
}

type UploadAvatarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // 头像URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAvatarResponse) Reset() {
	*x = UploadAvatarResponse{}
	mi := &file_idl_file_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAvatarResponse) ProtoMessage() {}

func (x *UploadAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_file_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAvatarResponse.ProtoReflect.Descriptor instead.
func (*UploadAvatarResponse) Descriptor() ([]byte, []int) {
	return file_idl_file_file_proto_rawDescGZIP(), []int{1}
}

func (x *UploadAvatarResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 上传图片
type UploadImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadImageRequest) Reset() {
	*x = UploadImageRequest{}
	mi := &file_idl_file_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageRequest) ProtoMessage() {}

func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_file_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.
func (*UploadImageRequest) Descriptor() ([]byte, []int) {
	return file_idl_file_file_proto_rawDescGZIP(), []int{2}
}

type UploadImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // 图片URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadImageResponse) Reset() {
	*x = UploadImageResponse{}
	mi := &file_idl_file_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageResponse) ProtoMessage() {}

func (x *UploadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_file_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageResponse.ProtoReflect.Descriptor instead.
func (*UploadImageResponse) Descriptor() ([]byte, []int) {
	return file_idl_file_file_proto_rawDescGZIP(), []int{3}
}

func (x *UploadImageResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 上传文件初始化
type UploadFileInitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`  // 文件名
	Filesize      int64                  `protobuf:"varint,2,opt,name=filesize,proto3" json:"filesize,omitempty"` // 文件大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileInitRequest) Reset() {
	*x = UploadFileInitRequest{}
	mi := &file_idl_file_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInitRequest) ProtoMessage() {}

func (x *UploadFileInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_file_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInitRequest.ProtoReflect.Descriptor instead.
func (*UploadFileInitRequest) Descriptor() ([]byte, []int) {
	return file_idl_file_file_proto_rawDescGZIP(), []int{4}
}

func (x *UploadFileInitRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileInitRequest) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

type UploadFileInitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      int32                  `protobuf:"varint,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`           // 上传ID
	SplitSize     int64                  `protobuf:"varint,2,opt,name=split_size,json=splitSize,proto3" json:"split_size,omitempty"`        // 分片大小
	UploadIdMd5   string                 `protobuf:"bytes,3,opt,name=upload_id_md5,json=uploadIdMd5,proto3" json:"upload_id_md5,omitempty"` // 上传ID的MD5值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileInitResponse) Reset() {
	*x = UploadFileInitResponse{}
	mi := &file_idl_file_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInitResponse) ProtoMessage() {}

func (x *UploadFileInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_file_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInitResponse.ProtoReflect.Descriptor instead.
func (*UploadFileInitResponse) Descriptor() ([]byte, []int) {
	return file_idl_file_file_proto_rawDescGZIP(), []int{5}
}

func (x *UploadFileInitResponse) GetUploadId() int32 {
	if x != nil {
		return x.UploadId
	}
	return 0
}

func (x *UploadFileInitResponse) GetSplitSize() int64 {
	if x != nil {
		return x.SplitSize
	}
	return 0
}

func (x *UploadFileInitResponse) GetUploadIdMd5() string {
	if x != nil {
		return x.UploadIdMd5
	}
	return ""
}

// 上传文件分片
type UploadFileChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      int32                  `protobuf:"varint,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`       // 上传ID
	SplitIndex    int32                  `protobuf:"varint,2,opt,name=split_index,json=splitIndex,proto3" json:"split_index,omitempty"` // 分片索引
	SplitCount    int32                  `protobuf:"varint,3,opt,name=split_count,json=splitCount,proto3" json:"split_count,omitempty"` // 分片总数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileChunkRequest) Reset() {
	*x = UploadFileChunkRequest{}
	mi := &file_idl_file_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileChunkRequest) ProtoMessage() {}

func (x *UploadFileChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_file_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileChunkRequest.ProtoReflect.Descriptor instead.
func (*UploadFileChunkRequest) Descriptor() ([]byte, []int) {
	return file_idl_file_file_proto_rawDescGZIP(), []int{6}
}

func (x *UploadFileChunkRequest) GetUploadId() int32 {
	if x != nil {
		return x.UploadId
	}
	return 0
}

func (x *UploadFileChunkRequest) GetSplitIndex() int32 {
	if x != nil {
		return x.SplitIndex
	}
	return 0
}

func (x *UploadFileChunkRequest) GetSplitCount() int32 {
	if x != nil {
		return x.SplitCount
	}
	return 0
}

type UploadFileChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      int32                  `protobuf:"varint,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"` // 上传ID
	IsMerged      bool                   `protobuf:"varint,2,opt,name=is_merged,json=isMerged,proto3" json:"is_merged,omitempty"` // 是否已合并
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileChunkResponse) Reset() {
	*x = UploadFileChunkResponse{}
	mi := &file_idl_file_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileChunkResponse) ProtoMessage() {}

func (x *UploadFileChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_file_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileChunkResponse.ProtoReflect.Descriptor instead.
func (*UploadFileChunkResponse) Descriptor() ([]byte, []int) {
	return file_idl_file_file_proto_rawDescGZIP(), []int{7}
}

func (x *UploadFileChunkResponse) GetUploadId() int32 {
	if x != nil {
		return x.UploadId
	}
	return 0
}

func (x *UploadFileChunkResponse) GetIsMerged() bool {
	if x != nil {
		return x.IsMerged
	}
	return false
}

var File_idl_file_file_proto protoreflect.FileDescriptor

const file_idl_file_file_proto_rawDesc = "" +
	"\n" +
	"\x13idl/file/file.proto\x12\x04file\"\x15\n" +
	"\x13UploadAvatarRequest\"(\n" +
	"\x14UploadAvatarResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\x14\n" +
	"\x12UploadImageRequest\"'\n" +
	"\x13UploadImageResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"O\n" +
	"\x15UploadFileInitRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1a\n" +
	"\bfilesize\x18\x02 \x01(\x03R\bfilesize\"x\n" +
	"\x16UploadFileInitResponse\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\x05R\buploadId\x12\x1d\n" +
	"\n" +
	"split_size\x18\x02 \x01(\x03R\tsplitSize\x12\"\n" +
	"\rupload_id_md5\x18\x03 \x01(\tR\vuploadIdMd5\"w\n" +
	"\x16UploadFileChunkRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\x05R\buploadId\x12\x1f\n" +
	"\vsplit_index\x18\x02 \x01(\x05R\n" +
	"splitIndex\x12\x1f\n" +
	"\vsplit_count\x18\x03 \x01(\x05R\n" +
	"splitCount\"S\n" +
	"\x17UploadFileChunkResponse\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\x05R\buploadId\x12\x1b\n" +
	"\tis_merged\x18\x02 \x01(\bR\bisMerged2\xb5\x02\n" +
	"\vFileService\x12E\n" +
	"\fUploadAvatar\x12\x19.file.UploadAvatarRequest\x1a\x1a.file.UploadAvatarResponse\x12B\n" +
	"\vUploadImage\x12\x18.file.UploadImageRequest\x1a\x19.file.UploadImageResponse\x12K\n" +
	"\x0eUploadFileInit\x12\x1b.file.UploadFileInitRequest\x1a\x1c.file.UploadFileInitResponse\x12N\n" +
	"\x0fUploadFileChunk\x12\x1c.file.UploadFileChunkRequest\x1a\x1d.file.UploadFileChunkResponseB\bZ\x06./fileb\x06proto3"

var (
	file_idl_file_file_proto_rawDescOnce sync.Once
	file_idl_file_file_proto_rawDescData []byte
)

func file_idl_file_file_proto_rawDescGZIP() []byte {
	file_idl_file_file_proto_rawDescOnce.Do(func() {
		file_idl_file_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_idl_file_file_proto_rawDesc), len(file_idl_file_file_proto_rawDesc)))
	})
	return file_idl_file_file_proto_rawDescData
}

var file_idl_file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_idl_file_file_proto_goTypes = []any{
	(*UploadAvatarRequest)(nil),     // 0: file.UploadAvatarRequest
	(*UploadAvatarResponse)(nil),    // 1: file.UploadAvatarResponse
	(*UploadImageRequest)(nil),      // 2: file.UploadImageRequest
	(*UploadImageResponse)(nil),     // 3: file.UploadImageResponse
	(*UploadFileInitRequest)(nil),   // 4: file.UploadFileInitRequest
	(*UploadFileInitResponse)(nil),  // 5: file.UploadFileInitResponse
	(*UploadFileChunkRequest)(nil),  // 6: file.UploadFileChunkRequest
	(*UploadFileChunkResponse)(nil), // 7: file.UploadFileChunkResponse
}
var file_idl_file_file_proto_depIdxs = []int32{
	0, // 0: file.FileService.UploadAvatar:input_type -> file.UploadAvatarRequest
	2, // 1: file.FileService.UploadImage:input_type -> file.UploadImageRequest
	4, // 2: file.FileService.UploadFileInit:input_type -> file.UploadFileInitRequest
	6, // 3: file.FileService.UploadFileChunk:input_type -> file.UploadFileChunkRequest
	1, // 4: file.FileService.UploadAvatar:output_type -> file.UploadAvatarResponse
	3, // 5: file.FileService.UploadImage:output_type -> file.UploadImageResponse
	5, // 6: file.FileService.UploadFileInit:output_type -> file.UploadFileInitResponse
	7, // 7: file.FileService.UploadFileChunk:output_type -> file.UploadFileChunkResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_idl_file_file_proto_init() }
func file_idl_file_file_proto_init() {
	if File_idl_file_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_idl_file_file_proto_rawDesc), len(file_idl_file_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_file_file_proto_goTypes,
		DependencyIndexes: file_idl_file_file_proto_depIdxs,
		MessageInfos:      file_idl_file_file_proto_msgTypes,
	}.Build()
	File_idl_file_file_proto = out.File
	file_idl_file_file_proto_goTypes = nil
	file_idl_file_file_proto_depIdxs = nil
}
