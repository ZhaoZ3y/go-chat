// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: auth.proto

package server

import (
	"context"

	"IM/apps/auth/internal/logic"
	"IM/apps/auth/internal/svc"
	"IM/apps/auth/rpc/auth"
)

type AuthServiceServer struct {
	svcCtx *svc.ServiceContext
	auth.UnimplementedAuthServiceServer
}

func NewAuthServiceServer(svcCtx *svc.ServiceContext) *AuthServiceServer {
	return &AuthServiceServer{
		svcCtx: svcCtx,
	}
}

// 登录
func (s *AuthServiceServer) Login(ctx context.Context, in *auth.AuthLoginRequest) (*auth.AuthLoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 注销登录
func (s *AuthServiceServer) Logout(ctx context.Context, in *auth.AuthLogoutRequest) (*auth.AuthLogoutResponse, error) {
	l := logic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}

// 刷新Token
func (s *AuthServiceServer) Refresh(ctx context.Context, in *auth.AuthRefreshRequest) (*auth.AuthRefreshResponse, error) {
	l := logic.NewRefreshLogic(ctx, s.svcCtx)
	return l.Refresh(in)
}

// 注册
func (s *AuthServiceServer) Register(ctx context.Context, in *auth.AuthRegisterRequest) (*auth.AuthRegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}
